generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model guest {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  first_name      String       @db.VarChar(255)
  last_name       String       @db.VarChar(255)
  username        String       @db.VarChar(255)
  password        String       @db.VarChar(255)
  organization_id String       @db.Uuid
  created_at      DateTime     @default(now()) @db.Timestamp(6)
  updated_at      DateTime     @default(now()) @db.Timestamp(6)
  organization    organization @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model inventory {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_id      String       @db.Uuid
  quantity        Int
  status          String       @db.VarChar(255)
  organization_id String       @db.Uuid
  created_at      DateTime     @default(now()) @db.Timestamp(6)
  updated_at      DateTime     @default(now()) @db.Timestamp(6)
  organization    organization @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  product         product      @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model organization {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?     @db.VarChar(255)
  name        String      @db.VarChar(255)
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  user_id     String      @db.Uuid
  tenant_id   String      @db.VarChar(255)
  guest       guest[]
  inventory   inventory[]
  user        user        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  product     product[]
  sales       sales[]
}

model product {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String       @db.VarChar(255)
  brand           String       @db.VarChar(255)
  price           Int
  style           String       @db.VarChar(255)
  organization_id String       @db.Uuid
  created_at      DateTime     @default(now()) @db.Timestamp(6)
  updated_at      DateTime     @default(now()) @db.Timestamp(6)
  inventory       inventory[]
  organization    organization @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sales           sales[]
}

model sales {
  id                 String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_id         String       @db.Uuid
  sales_associate_id String       @db.Uuid
  quantity           Int
  organization_id    String       @db.Uuid
  created_at         DateTime     @default(now()) @db.Timestamp(6)
  updated_at         DateTime     @default(now()) @db.Timestamp(6)
  organization       organization @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  product            product      @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user               user         @relation(fields: [sales_associate_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  organization organization[]
  sales        sales[]
}
